// Local System Manager - A comprehensive local system management script
// This script demonstrates SCL's capabilities on your local macOS machine
// No SSH required - all operations run locally

// Configuration
mode := "interpret";
setting := "configuration";
super_user := true;
on_error := "rollback";

// System configuration variables
declare backup_enabled: bool = true;
declare cleanup_enabled: bool = true;
declare monitoring_enabled: bool = true;
declare create_workspace: bool = true;

fn main() {
    print("🖥️  Local System Manager - SCL Demo");
    print("=====================================");
    
    // Phase 1: System Analysis
    system_analysis();
    
    // Phase 2: Workspace Setup
    if (create_workspace) {
        workspace_setup();
    }
    
    // Phase 3: System Monitoring
    if (monitoring_enabled) {
        system_monitoring();
    }
    
    // Phase 4: File Management
    file_management_demo();
    
    // Phase 5: Backup Operations
    if (backup_enabled) {
        backup_operations();
    }
    
    // Phase 6: System Cleanup
    if (cleanup_enabled) {
        system_cleanup();
    }
    
    // Phase 7: Final Report
    final_report();
    
    print("✅ Local System Manager completed successfully!");
}

fn system_analysis() {
    print("📊 Phase 1: System Analysis");
    print("----------------------------");
    
    // Get comprehensive system information
    print("🔍 Gathering system information...");
    sysinfo();
    
    print("📈 Current system status analyzed");
}

fn workspace_setup() {
    print("🏗️  Phase 2: Workspace Setup");
    print("-----------------------------");
    
    // Create a demo workspace in /tmp
    print("📁 Creating SCL demo workspace...");
    
    // Create main workspace directory
    create("/tmp/scl_workspace", "README.md", "644");
    
    // Create project structure
    create("/tmp/scl_workspace/projects", "project_list.txt", "644");
    create("/tmp/scl_workspace/logs", "system.log", "644");
    create("/tmp/scl_workspace/backups", "backup_info.txt", "644");
    create("/tmp/scl_workspace/configs", "app.conf", "600");
    
    print("✅ Workspace structure created in /tmp/scl_workspace");
}

fn system_monitoring() {
    print("📊 Phase 3: System Monitoring");
    print("------------------------------");
    
    print("🔍 Analyzing system performance...");
    
    // Note: sysinfo() works locally and provides system details
    sysinfo();
    
    print("📈 System monitoring completed");
    print("💡 Check the output above for system metrics");
}

fn file_management_demo() {
    print("📁 Phase 4: File Management Demo");
    print("---------------------------------");
    
    // Create sample configuration files
    print("📝 Creating sample configuration files...");
    
    create("/tmp/scl_workspace/configs", "nginx.conf", "644");
    create("/tmp/scl_workspace/configs", "app.properties", "600");
    create("/tmp/scl_workspace/configs", "database.yml", "600");
    
    // Create sample project files
    print("🚀 Creating sample project files...");
    
    create("/tmp/scl_workspace/projects", "web_app.md", "644");
    create("/tmp/scl_workspace/projects", "api_service.md", "644");
    create("/tmp/scl_workspace/projects", "mobile_app.md", "644");
    
    // Create log files with different permissions
    print("📋 Creating log files...");
    
    create("/tmp/scl_workspace/logs", "application.log", "644");
    create("/tmp/scl_workspace/logs", "error.log", "644");
    create("/tmp/scl_workspace/logs", "access.log", "644");
    
    print("✅ File management demo completed");
}

fn backup_operations() {
    print("💾 Phase 5: Backup Operations");
    print("------------------------------");
    
    print("📦 Creating backup of workspace...");
    
    // Create backup directory
    create("/tmp/scl_backups", "backup_log.txt", "644");
    
    // Simulate backup operations by creating backup info files
    create("/tmp/scl_backups", "workspace_backup_info.txt", "644");
    create("/tmp/scl_backups", "config_backup_info.txt", "644");
    create("/tmp/scl_backups", "project_backup_info.txt", "644");
    
    print("✅ Backup operations completed");
    print("📁 Backup information stored in /tmp/scl_backups");
}

fn system_cleanup() {
    print("🧹 Phase 6: System Cleanup");
    print("---------------------------");
    
    print("🗑️  Performing system cleanup tasks...");
    
    // Create cleanup log
    create("/tmp/scl_workspace/logs", "cleanup.log", "644");
    
    // Simulate cleanup by creating cleanup report
    create("/tmp/scl_workspace", "cleanup_report.txt", "644");
    
    print("✅ System cleanup completed");
    print("📋 Cleanup report available in workspace");
}

fn final_report() {
    print("📊 Phase 7: Final System Report");
    print("--------------------------------");
    
    // Create final report
    create("/tmp/scl_workspace", "system_report.txt", "644");
    
    print("📈 Final system analysis:");
    
    // Get final system state
    sysinfo();
    
    print("📁 Files created during this demo:");
    print("   • /tmp/scl_workspace/ - Main workspace");
    print("   • /tmp/scl_workspace/projects/ - Project files");
    print("   • /tmp/scl_workspace/configs/ - Configuration files");
    print("   • /tmp/scl_workspace/logs/ - Log files");
    print("   • /tmp/scl_workspace/backups/ - Backup information");
    print("   • /tmp/scl_backups/ - Backup storage");
    
    print("🔍 You can explore the created files with:");
    print("   ls -la /tmp/scl_workspace/");
    print("   ls -la /tmp/scl_backups/");
    
    print("📊 System report generated successfully");
}